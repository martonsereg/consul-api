apply plugin: "java"
apply plugin: "idea"
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.sequenceiq'
version = '1.06'

repositories {
	mavenCentral()
}

configurations {
    deployerJars
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "s3://maven.sequenceiq.com/releases") {
                authentication(userName: "$System.env.AWS_ACCESS_KEY", passphrase: "$System.env.AWS_SECRET_ACCESS_KEY")
            }
            snapshotRepository(url: "s3://maven.sequenceiq.com/snapshots") {
                authentication(userName: "$System.env.AWS_ACCESS_KEY", passphrase: "$System.env.AWS_SECRET_ACCESS_KEY")
            }
        }
    }
}


dependencies {
	compile "com.google.code.gson:gson:2.3"

	compile "org.apache.httpcomponents:httpcore:4.2.5"
	compile "org.apache.httpcomponents:httpclient:4.2.5"

	compile "commons-logging:commons-logging:1.1"

	testCompile "junit:junit:4.11"
	testCompile "org.hamcrest:hamcrest-core:1.3"

    deployerJars 'org.springframework.build.aws:org.springframework.build.aws.maven:3.0.0.RELEASE'
}

// --------------------------------------------------------------
// Tasks for publishing into Maven Central

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

artifacts {
	archives jar
	archives sourcesJar
	archives javadocJar
}

def doUploadArchives = project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')
if (doUploadArchives) {
	group = "com.ecwid.consul"
	archivesBaseName = "consul-api"
	version = "1.1.3"

	signing {
		sign configurations.archives
	}

	uploadArchives {
		repositories {
			mavenDeployer {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
					authentication(userName: sonatypeUsername, password: sonatypePassword)
				}

				snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
					authentication(userName: sonatypeUsername, password: sonatypePassword)
				}

				pom.project {
					name 'Ecwid Consul API'
					packaging 'jar'
					description 'Java client for Consul HTTP API (http://consul.io)'
					url 'https://github.com/Ecwid/consul-api'

					scm {
						connection 'scm:git:git@github.com:Ecwid/consul-api.git'
						developerConnection 'scm:git:git@github.com:Ecwid/consul-api.git'
						url 'https://github.com/Ecwid/consul-api.git'
					}

					licenses {
						license {
							name 'The Apache License, Version 2.0'
							url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						}
					}

					developers {
						developer {
							id 'vgv'
							name 'Vasily Vasilkov'
							email 'vgv@ecwid.com'
						}
					}
				}
			}
		}
	}
}

// --------------------------------------------------------------
// Wrapper

task wrapper(type: Wrapper) {
	gradleVersion = '2.4'
}
